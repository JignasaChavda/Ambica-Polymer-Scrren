[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-12-12 15:08:44.366729",
  "module": "Ambica HrScreen",
  "name": "Set height of custom field",
  "script": "frappe.ui.form.on('Employee', {\n\trefresh: function(frm) {\n\t    var fields = ['custom_religion','custom_witness_name_1','custom_witness_name_2','custom_whatsapp_no','custom_address_line_1','custom_address_line_2','custom_address_line_2_permanent','custom_address_line_1_permanent','custom_canteen_card_no','custom_aadhaar_number','custom_uan_number','custom_bank_branch','custom_salary_structure','custom_father_occupation']\n\t\tfields.forEach(function(field) {\n            var $field = frm.fields_dict[field];\n            if ($field && $field.$input) {\n                $field.$input.css({'height': '33px'});\n            }\n        });\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance Import",
  "enabled": 1,
  "modified": "2023-12-15 19:04:20.233895",
  "module": "Ambica HrScreen",
  "name": "Import Attendance",
  "script": "frappe.ui.form.on('Attendance Import', {\r    refresh(frm) {\r        frm.fields_dict[\"attendance_details\"].grid.add_custom_button(__('Download'), function() {\r            // Fetch child table data\r            const childTableData = frm.doc.attendance_details;\r            \r            // Define a mapping of custom field names to child table field names\r            const fieldMapping = {\r              \r                \"employee\": \"employee\",\r                \"employee_name\":\"employee_name\",\r                \"department\":\"department\",\r                \"company\":\"company\",\r                \"attendance_date\":\"attendance_date\",\r                \"status\":\"status\",\r                \"in_time\":\"in_time\",\r                \"out_time\":\"out_time\",\r                \"shift\":\"shift\",\r                \"work_hours\":\"work_hours\",\r                \"late_hours\":\"late_hours\",\r                \"early_hours\":\"early_hours\",\r                \"extra_hours\":\"extra_hours\",\r                \"weekly_off\":\"weekly_off\",\r                \"holiday\":\"holiday\",\r                \"remarks\":\"remarks\"\r            };\r\r            // Create a CSV string with custom field names as the first row\r            const csvContent = \"data:text/csv;charset=utf-8,\" \r                + Object.keys(fieldMapping).join(',') + '\\n'\r                + childTableData.map(row => Object.keys(fieldMapping).map(customField => row[fieldMapping[customField]] || \"\").join(',')).join('\\n');\r\r            // Create a temporary anchor element to trigger the download\r            const anchor = document.createElement('a');\r            anchor.href = encodeURI(csvContent);\r            anchor.target = '_blank';\r            anchor.download = 'Attendance.csv';\r            anchor.click();\r        });\r\r        // Change button style to match the primary color\r        frm.fields_dict[\"attendance_details\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\r        \r    }\r});\r\rfrappe.ui.form.on('Attendance Import', {\r    refresh(frm) {\r        frm.fields_dict[\"attendance_details\"].grid.add_custom_button(__('Upload'), function() {\r            // Create a file input element dynamically\r            var fileInput = document.createElement('input');\r            fileInput.type = 'file';\r            fileInput.accept = '.csv,.xlsx';\r            \r            // Trigger the file selection when the file input changes\r            fileInput.addEventListener('change', function(event) {\r                handleFileUpload(event.target.files[0]);\r            });\r\r            // Trigger the file input click event\r            fileInput.click();\r        });\r\r        // Change button style to match the primary color\r        frm.fields_dict[\"attendance_details\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\r    }  \r});\rfunction handleFileUpload(file) {\r    if (!file) {\r        frappe.msgprint(__('No file selected.'));\r        return;\r    }\r\r    var reader = new FileReader();\r    reader.onload = function(event) {\r        var csvData = event.target.result;\r        processData(csvData);\r    };\r    reader.readAsText(file);\r}\rfunction processData(csvData) {\r    var lines = csvData.split('\\n');\r    var fieldNames = lines[0].split(','); // Assuming the first row contains field names\r\r    // Remove the header line from the lines array\r    lines.splice(0, 1);\r\r    var pressItems = [];\r    for (var i = 0; i < lines.length; i++) {\r        var values = lines[i].split(',');\r\r        // Skip empty lines\r        if (values.length === 1 && values[0].trim() === '') {\r            continue;\r        }\r\r        var pressItem = {};\r        for (var j = 0; j < fieldNames.length; j++) {\r            // Trim any leading/trailing spaces from field names and values\r            var fieldName = fieldNames[j].trim();\r            var value = values[j].trim();\r\r            // Map the field name with its corresponding value\r            pressItem[fieldName] = value;\r        }\r\r        pressItems.push(pressItem);\r    }\r\r    // Get the current form instance\r    var frm = cur_frm;\r\r    // Clear existing child table rows\r    frm.clear_table('attendance_details');\r\r    // Add new child table rows based on the CSV data\r    for (var k = 0; k < pressItems.length; k++) {\r        var child = frm.add_child('attendance_details', pressItems[k]);\r    }\r\r    // Refresh the child table to display the newly added rows\r    frm.refresh_field('attendance_details');\r\r    frappe.msgprint(__('CSV data has been successfully loaded into the child table.'));\r}\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Labour Welfare Fund",
  "enabled": 1,
  "modified": "2023-12-15 19:04:34.875842",
  "module": "Ambica HrScreen",
  "name": "Fetch LWF Component",
  "script": "frappe.ui.form.on('Labour Welfare Fund', {\n\trefresh(frm) {\n\t\n\t\tfrappe.db.get_list('Salary Component', {\n            fields: ['name'], \n            filters: { \n                'component_type':'LWF'\n            }\n        }).then(function(records) {\n            var ans = records[0].name;\n            console.log(ans);\n            frm.set_value('component',ans);\n            \n           frappe.db.get_value(\"Salary Component\", ans,['employee_contribution','employer_contribution']).then(function(r){\n                var rate = r.message;\n                var emp_contri = rate.employee_contribution;\n                var empr_contri = rate.employer_contribution;\n                console.log(emp_contri,empr_contri);\n                \n                frm.set_value('employer_contribution',empr_contri);\n                frm.set_value('employee_contribution',emp_contri);\n           })\n           \n            \n            \n        });\n\n\t}\n});\n",
  "view": "Form"
 }
]